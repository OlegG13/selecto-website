;(function($){

    //alert('Hello!');

})(jQuery);






var menu = (function () {

    var $menuFrame = $('.menu'),
        $menuBtn = $('[data-btn-mobile-menu]'),
        $menuTopLine = $menuBtn.find('.mobile-menu-btn__line--top'),
        $menuMidLine = $menuBtn.find('.mobile-menu-btn__line--mid'),
        $menuBotLine = $menuBtn.find('.mobile-menu-btn__line--bot'),
        $header = $('.page__header'),
        isOpen = false;

    function openMenu() {
        console.log("Open!");
        _reverseStatus();
        $menuTopLine.addClass('mobile-menu-btn__line--top-active');
        $menuMidLine.addClass('mobile-menu-btn__line--mid-active');
        $menuBotLine.addClass('mobile-menu-btn__line--bot-active');
        $header.addClass('page__header--menu-open');
        $menuFrame.addClass('menu--open');
    }

    function closeMenu() {
        console.log("Close!");
        _reverseStatus();

        $menuTopLine.removeClass('mobile-menu-btn__line--top-active');
        $menuMidLine.removeClass('mobile-menu-btn__line--mid-active');
        $menuBotLine.removeClass('mobile-menu-btn__line--bot-active');
        $header.removeClass('page__header--menu-open');
        $menuFrame.removeClass('menu--open');
    }
    
    function _reverseStatus() {
        isOpen = !isOpen;
    }


    function _init() {
        if (isOpen === true) {
            closeMenu();
        } else {
            openMenu();
        }
    }

    $menuBtn.on('click', function () {
       _init();
    });

    return {
        open: openMenu,
        close: closeMenu
    }
})();
;(function() {

    var headers = ["#slide01", "#slide02", "#slide03", "#slide04", "#slide05", "#slide06", "#slide07"];

    // init
    var controller = new ScrollMagic.Controller();

    // build tween
    //var tween = TweenMax.to("#target", 0.5, {backgroundColor: "black"});


    // function countFunc() {
    //     return demo.start();
    // };

    // SCENE 1
    // create scenes for each of the headers
    headers.forEach(function (header, index) {

        // number for highlighting scenes
        var num = index+1;

        // make scene
        var headerScene = new ScrollMagic.Scene({
            triggerElement: header, // trigger CSS animation when header is in the middle of the viewport
            offset: -100 // offset triggers the animation 95px earlier than middle of the viewport, adjust to your liking
        })
            .setClassToggle('#slide0'+num, 'is-active') // set class to active slide
            //.addIndicators() // add indicators (requires plugin), use for debugging
            //.setTween(tween)
            //.setPin("#target")
            .on('start', function () {
                if (num === 2) {
                    setTimeout(projectCount.start.bind(projectCount), 1000);
                    setTimeout(yearsCount.start.bind(yearsCount), 1300);
                    setTimeout(peopleCount.start.bind(peopleCount), 1600);
                    setTimeout(officesCount.start.bind(officesCount), 1900);
                }
            })
            .addTo(controller);
    });



})();
;(function($){

	$.slickSlider = {

		getCols: function(slide){
			var breakpoints = [768,992,1200];
			var cols = slide ? slide.split(',') : false;

			if($.isArray(cols)){
				cols.shift();
				if(cols.length > 0){
					return $.map(cols, function(value, index){
						return {
							breakpoint: breakpoints[index],
							settings: {
								slidesToShow: parseInt(value)
							}
						}
					});
				}else{
					return false;
				}	  
			}else{
				return false;
			}
		},
		getFirstCol: function(slide){
			var cols = slide ? slide.split(',') : false;
			if(cols){
				return parseInt(slide.split(',')[0]);
			}else{
				return 2;
			}
		}
	}
	
})(jQuery);
;(function () {

    var sliders = $('[data-slider="review"]');

    sliders.each(function () {

        var scope = $(this);
        var slides = $('[data-slider-slides]', scope).attr('data-slider-slides');

        $('[data-slider-slides]', scope).find('[data-slider-slide]').css('float', 'left').end().slick({
            dots: false,
            arrows: true,
            infinite: false,
            adaptiveHeight: false,
            slidesToShow: $.slickSlider.getFirstCol(slides),
            autoplay: false,
            autoplaySpeed: 3000,
            swipeToSlide: true,
            mobileFirst: true,
            rows: 1,
            prevArrow: $('[data-slider-arrow-left]', scope).removeClass('slider__arrow--hidden'),
            nextArrow: $('[data-slider-arrow-right]', scope).removeClass('slider__arrow--hidden'),
            responsive: $.slickSlider.getCols(slides)
        });

    });

})();
var count = (function () {

    var $counter = $('[data-count]');

    function init() {
        return $counter.each(function () {
            console.log($(this))
        })
    }

    return {
        init: init
    }

})();

var project = {
    useEasing : true,
    useGrouping : true,
    separator : ',',
    decimal : '.',
    count: 60,
    id: "projects"
};

var projectCount = new CountUp(project.id, 10, project.count, 0, 2.5, project);

var years = {
    useEasing : true,
    useGrouping : true,
    separator : ',',
    decimal : '.',
    count: 3,
    id: "years"
};

var yearsCount = new CountUp(years.id, 0, years.count, 0, 2.5, years);


var people = {
    useEasing : true,
    useGrouping : true,
    separator : ',',
    decimal : '.',
    count: 50,
    id: "people"
};

var peopleCount = new CountUp(people.id, 10, people.count, 0, 2.5, people);

var offices = {
    useEasing : true,
    useGrouping : true,
    separator : ',',
    decimal : '.',
    count: 2,
    id: "offices"
};

var officesCount = new CountUp(offices.id, 0, offices.count, 0, 2.5, offices);

